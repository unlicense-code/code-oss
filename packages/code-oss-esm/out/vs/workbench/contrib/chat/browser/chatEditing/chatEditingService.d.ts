import { CancellationTokenSource } from '../../../../../base/common/cancellation.js';
import { Event } from '../../../../../base/common/event.js';
import { Disposable } from '../../../../../base/common/lifecycle.js';
import { IObservable } from '../../../../../base/common/observable.js';
import { URI } from '../../../../../base/common/uri.js';
import { ITextModelService } from '../../../../../editor/common/services/resolverService.js';
import { IContextKeyService } from '../../../../../platform/contextkey/common/contextkey.js';
import { IFileService } from '../../../../../platform/files/common/files.js';
import { IInstantiationService } from '../../../../../platform/instantiation/common/instantiation.js';
import { IProgressService } from '../../../../../platform/progress/common/progress.js';
import { IWorkbenchAssignmentService } from '../../../../services/assignment/common/assignmentService.js';
import { IDecorationsService } from '../../../../services/decorations/common/decorations.js';
import { IEditorGroupsService } from '../../../../services/editor/common/editorGroupsService.js';
import { IEditorService } from '../../../../services/editor/common/editorService.js';
import { IMultiDiffSourceResolver, IMultiDiffSourceResolverService, IResolvedMultiDiffSource } from '../../../multiDiffEditor/browser/multiDiffSourceResolverService.js';
import { IChatEditingService, IChatEditingSession } from '../../common/chatEditingService.js';
import { IChatService } from '../../common/chatService.js';
import { ChatEditingSession } from './chatEditingSession.js';
export declare class ChatEditingService extends Disposable implements IChatEditingService {
    private readonly _editorGroupsService;
    private readonly _instantiationService;
    private readonly _chatService;
    private readonly _progressService;
    private readonly _editorService;
    private readonly _fileService;
    private readonly _workbenchAssignmentService;
    _serviceBrand: undefined;
    private readonly _currentSessionObs;
    private readonly _currentSessionDisposables;
    private readonly _currentAutoApplyOperationObs;
    get currentAutoApplyOperation(): CancellationTokenSource | null;
    get currentEditingSession(): IChatEditingSession | null;
    get currentEditingSessionObs(): IObservable<IChatEditingSession | null>;
    private readonly _onDidCreateEditingSession;
    get onDidCreateEditingSession(): Event<IChatEditingSession>;
    private readonly _onDidChangeEditingSession;
    readonly onDidChangeEditingSession: Event<void>;
    private _editingSessionFileLimitPromise;
    private _editingSessionFileLimit;
    get editingSessionFileLimit(): number;
    private _applyingChatEditsFailedContextKey;
    constructor(_editorGroupsService: IEditorGroupsService, _instantiationService: IInstantiationService, multiDiffSourceResolverService: IMultiDiffSourceResolverService, textModelService: ITextModelService, contextKeyService: IContextKeyService, _chatService: IChatService, _progressService: IProgressService, _editorService: IEditorService, decorationsService: IDecorationsService, _fileService: IFileService, _workbenchAssignmentService: IWorkbenchAssignmentService);
    getSnapshotUri(id: string, uri: URI): URI | undefined;
    getEditingSession(resource: URI): IChatEditingSession | null;
    dispose(): void;
    startOrContinueEditingSession(chatSessionId: string, options?: {
        silent: boolean;
    }): Promise<IChatEditingSession>;
    private _createEditingSession;
    createSnapshot(requestId: string): void;
    restoreSnapshot(requestId: string | undefined): Promise<void>;
    private installAutoApplyObserver;
    private _continueEditingSession;
    private _findGroupedEditors;
}
export declare class ChatEditingMultiDiffSourceResolver implements IMultiDiffSourceResolver {
    private readonly _currentSession;
    private readonly _instantiationService;
    static readonly scheme = "chat-editing-multi-diff-source";
    static getMultiDiffSourceUri(): URI;
    constructor(_currentSession: IObservable<ChatEditingSession | null>, _instantiationService: IInstantiationService);
    canHandleUri(uri: URI): boolean;
    resolveDiffSource(uri: URI): Promise<IResolvedMultiDiffSource>;
}
