import './media/chatEditorController.css';
import { Disposable } from '../../../../base/common/lifecycle.js';
import { ICodeEditor, IOverlayWidget, IOverlayWidgetPosition } from '../../../../editor/browser/editorBrowser.js';
import { ISingleEditOperation } from '../../../../editor/common/core/editOperation.js';
import { IEditorContribution } from '../../../../editor/common/editorCommon.js';
import { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';
import { IChatEditingService, IModifiedFileEntry } from '../common/chatEditingService.js';
import { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';
import { IEditorService } from '../../../services/editor/common/editorService.js';
export declare const ctxHasEditorModification: RawContextKey<boolean>;
export declare class ChatEditorController extends Disposable implements IEditorContribution {
    private readonly _editor;
    private readonly _instantiationService;
    private readonly _chatEditingService;
    private readonly _editorService;
    static readonly ID = "editor.contrib.chatEditorController";
    private readonly _decorations;
    private readonly _diffHunksRenderStore;
    private readonly _diffHunkWidgets;
    private _viewZones;
    private readonly _ctxHasEditorModification;
    static get(editor: ICodeEditor): ChatEditorController | null;
    constructor(_editor: ICodeEditor, _instantiationService: IInstantiationService, _chatEditingService: IChatEditingService, _editorService: IEditorService, contextKeyService: IContextKeyService);
    dispose(): void;
    private _clearRendering;
    private _updateWithDiff;
    revealNext(strict?: boolean): boolean;
    revealPrevious(strict?: boolean): boolean;
    private _reveal;
    undoNearestChange(closestWidget: DiffHunkWidget | undefined): void;
    openDiff(widget: DiffHunkWidget | undefined): Promise<void>;
}
declare class DiffHunkWidget implements IOverlayWidget {
    readonly entry: IModifiedFileEntry;
    private readonly _undoEdits;
    private readonly _versionId;
    private readonly _editor;
    private readonly _lineDelta;
    private static _idPool;
    private readonly _id;
    private readonly _domNode;
    private readonly _store;
    private _position;
    private _lastStartLineNumber;
    constructor(entry: IModifiedFileEntry, _undoEdits: ISingleEditOperation[], _versionId: number, _editor: ICodeEditor, _lineDelta: number, instaService: IInstantiationService);
    dispose(): void;
    getId(): string;
    layout(startLineNumber: number): void;
    toggle(show: boolean): void;
    getDomNode(): HTMLElement;
    getPosition(): IOverlayWidgetPosition | null;
    getStartLineNumber(): number | undefined;
    undo(): void;
}
export {};
